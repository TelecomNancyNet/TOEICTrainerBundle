{% extends 'TOEICTrainerBundle::base.html.twig' %}

{% block body -%}
    <h1>Sound recorder</h1>
    <audio></audio>
    <ul id="recordingslist"></ul>
    <button onclick="startRecording(this);">record</button>
    <button onclick="stopRecording(this);" disabled>stop</button>

    {% block javascripts %}
        
        <script>
          var audio_context;
          var recorder;

          function startRecording(button) {
            recorder && recorder.record();
            button.disabled = true;
            button.nextElementSibling.disabled = false;
            console.log('Recording...');
          }

          function stopRecording(button) {
            recorder && recorder.stop();
            button.disabled = true;
            button.previousElementSibling.disabled = false;
            console.log('Stopped recording.');
            
            // create WAV download link using audio data blob
            createDownloadLink();
            recorder.clear();
          }

          function createDownloadLink() {
            recorder && recorder.exportWAV(function(blob) {
              var url = URL.createObjectURL(blob);
              var li = document.createElement('li');
              var au = document.createElement('audio');
              var hf = document.createElement('a');
              
              au.controls = true;
              au.src = url;
              hf.href = url;
              hf.download = new Date().toISOString() + '.wav';
              hf.innerHTML = '<br>' + hf.download;
              li.appendChild(au);
              li.appendChild(hf);
              recordingslist.appendChild(li);
            });
        }

          function startUserMedia(stream) {
            window.__FIREFOX_HACK_RECORDER_JS__ = stream;
            var input = audio_context.createMediaStreamSource(stream);
            console.log('Media stream created.');
            
            input.connect(audio_context.destination);
            console.log('Input connected to audio context destination.');
            
            recorder = new Recorder(input);
            console.log('Recorder initialised.');
          }

          window.onload = function init() {
            try {
              // webkit shim
              window.AudioContext = window.AudioContext || window.webkitAudioContext;
              navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
              window.URL = window.URL || window.webkitURL;
              
              audio_context = new AudioContext;
              console.log('Audio context set up.');
              console.log('navigator.getUserMedia ' + (navigator.getUserMedia ? 'available.' : 'not present!'));
            } catch (e) {
              alert('No web audio support in this browser!');
            }
            
            navigator.getUserMedia({audio: true}, startUserMedia, function(e) {
              console.log('No live audio input: ' + e);
            });
         };
        </script>
        <script>
            var recorderWorker = "{{ asset('bundles/toeictrainer/script/recorderWorker.js') }}";
        </script>
        <script src="{{ asset('bundles/toeictrainer/script/recorder.js') }}"></script>
    {% endblock %}


    <ul class="record_actions">
        <li>
            <a href="{{ path('audiofile') }}">
                See the list of Audio Entries we have
            </a>
        </li>
    </ul>

{% endblock %}
